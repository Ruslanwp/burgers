{"version":3,"sources":["Navigation/Navigation.jsx","Burger/Burger.jsx","BurgersList/BurgersList.jsx","Modal/Modal.jsx","OrderList/OrderList.jsx","requests.js","App.jsx","index.jsx"],"names":["Navigation","className","role","aria-label","href","alt","src","height","width","aria-expanded","data-target","aria-hidden","id","to","icon","faShoppingCart","Burger","burger","onProductAdd","url","name","type","onClick","BurgersList","burgers","length","map","Modal","selectedProduct","chooseProduct","addToping","removeTopping","changeOrder","sum","useMemo","result","toppings","reduce","acc","curVal","quantity","price","console","log","classNames","ingredient","image","OrderList","userOrder","ingredients","useState","setSelectedProduct","foundedProduct","find","order","product","Fragment","topping","request","fetch","then","response","json","loadIngredients","App","setBurgers","setUserOrder","allIngredients","setIngredients","loadData","a","data","ingredientsFromServer","useEffect","addItem","useCallback","item","prevState","ingId","some","dish","path","exact","changedProduct","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a5f7d8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Navigation = () => (\n  <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n    <div className=\"navbar-brand\">\n      <a className=\"navbar-item\" href=\"https://bulma.io\" alt=\"rrr\">\n        <img src=\"https://c0.klipartz.com/pngpicture/739/1004/gratis-png-hamburguesa-hamburguesa-rey-comida-rapida-restaurante-kfc-logotipo-de-hamburguesa-rey.png\" height=\"80px\" width=\"80px\" alt=\"3\" />\n      </a>\n\n      <a href=\"/\" role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n        <span aria-hidden=\"true\" />\n      </a>\n    </div>\n    <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <Link\n              to=\"/\"\n              className=\"button is-rounded is-primary\"\n            >\n              <strong>Главная страница</strong>\n            </Link>\n            <Link to=\"/addings\" className=\"button is-primary is-rounded\">\n              <strong>Меню</strong>\n            </Link>\n            <Link to=\"/bucket\" className=\"button is-rounded is-warning\">\n              <strong>Корзина</strong>\n              <FontAwesomeIcon icon={faShoppingCart} />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Navigation;\n","import React from 'react';\n\nconst Burger = ({ burger, onProductAdd }) => (\n  <div key={burger.id} className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={burger.url} alt=\"Placeholder\" />\n      </figure>\n    </div>\n\n    <h3>{burger.name}</h3>\n    <footer className=\"card-footer\">\n      <div>\n        <p>Цена: от 59 грн</p>\n        <button\n          type=\"button\"\n          className=\"button is-rounded is-warning\"\n          onClick={() => onProductAdd(burger)}\n        >\n          добавить\n        </button>\n      </div>\n    </footer>\n  </div>\n);\n\nexport default Burger;\n","import React from 'react';\nimport Burger from '../Burger/Burger';\n\nconst BurgersList = ({ burgers, onProductAdd }) => (\n  <div className=\"main-cards\">\n    {burgers.length !== 0 && burgers.map((burger) => (\n      <Burger\n        onProductAdd={onProductAdd}\n        burger={burger}\n        key={burger.id}\n      />\n    ))}\n  </div>\n);\n\nexport default BurgersList;\n","import React, { useMemo } from 'react';\nimport './Modal.css';\nimport classNames from 'classnames';\n\nconst Modal = (\n  {\n    selectedProduct,\n    chooseProduct,\n    addToping,\n    removeTopping,\n    changeOrder,\n  },\n) => {\n  const sum = useMemo(() => {\n    const result = selectedProduct.toppings.reduce((acc, curVal) => (\n      acc + (curVal.quantity * curVal.price)\n    ), 0);\n\n    console.log(result);\n\n    return result;\n  }, [selectedProduct]);\n\n  console.log(sum);\n\n  return (\n    <div className={classNames('modal', {\n      'is-active': selectedProduct.id,\n    })}\n    >\n      <div className=\"modal-background\" />\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">{selectedProduct.name}</p>\n          <button\n            onClick={() => chooseProduct(null)}\n            className=\"delete\"\n            type=\"button\"\n            aria-label=\"close\"\n          />\n        </header>\n        <section className=\"modal-card-body\">\n          <img className=\"image is-128x128\" src={selectedProduct.url} alt=\"\" />\n\n          <div>\n            <div className=\"ingridients\">\n              {selectedProduct.toppings && selectedProduct.toppings\n                .map((ingredient) => (\n                  <div className=\"ingridient\">\n                    <span className=\"ingridient__text\">{ingredient.name}</span>\n                    <span>\n                      {ingredient.quantity === 0 ? 'не выбрано' : `количество ${ingredient.quantity}`}\n                    </span>\n                    <span>\n                      {`${ingredient.price * ingredient.quantity} грн`}\n                    </span>\n                    <div className=\"ingridient__control\">\n                      <button\n                        className=\"button is-rounded\"\n                        type=\"button\"\n                        onClick={() => removeTopping(selectedProduct, ingredient)}\n                      >\n                        -\n                      </button>\n                      <img className=\"image is-96x96\" src={ingredient.image} alt=\"\" />\n                      <button\n                        className=\"button is-rounded\"\n                        type=\"button\"\n                        onClick={() => addToping(selectedProduct, ingredient)}\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              <div>\n                {selectedProduct.toppings.reduce((acc, curVal) => (\n                  acc + (curVal.quantity * curVal.price)\n                ), 0)}\n                {' грн'}\n              </div>\n            </div>\n          </div>\n        </section>\n        <footer className=\"modal-card-foot\">\n          <button\n            type=\"button\"\n            className=\"button is-success\"\n            onClick={() => {\n              changeOrder(selectedProduct);\n              chooseProduct(null);\n            }}\n          >\n            Применить\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => chooseProduct(null)}\n          >\n            Отменить\n          </button>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Modal from '../Modal/Modal';\n\nconst OrderList = ({ userOrder, ingredients, changeOrder }) => {\n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  const chooseProduct = (id) => {\n    if (id === null) {\n      setSelectedProduct(null);\n      return;\n    }\n\n    const foundedProduct = userOrder.find((order) => order.id === id);\n\n    setSelectedProduct(foundedProduct);\n  };\n\n  const addToping = (product, ingredient) => {\n    setSelectedProduct({\n      ...product,\n      toppings: product.toppings.map((topping) => {\n        if (topping.id === ingredient.id) {\n          return ({\n            ...topping,\n            quantity: topping.quantity + 1,\n          });\n        }\n\n        return topping;\n      }),\n    });\n  };\n\n  const removeTopping = (product, ingredient) => {\n    setSelectedProduct({\n      ...product,\n      toppings: product.toppings.map((topping) => {\n        if (topping.id === ingredient.id && topping.quantity !== 0) {\n          return ({\n            ...topping,\n            quantity: topping.quantity - 1,\n          });\n        }\n\n        return topping;\n      }),\n    });\n  };\n\n  return (\n    <>\n      <div className=\"container order-cards\">\n        {userOrder.map((product) => (\n          <React.Fragment key={product.id}>\n            <div className=\"card-order-cell\">\n              <div className=\"card-image\">\n                <img\n                  src={product.url}\n                  alt=\"Placeholder\"\n                  width=\"180px\"\n                />\n                <div>\n                  <strong>{product.name}</strong>\n                </div>\n              </div>\n              <div>\n                <p>\n                  {`цена  ${product.toppings.reduce((acc, curVal) => (\n                    acc + (curVal.price * product.quantity)\n                  ), 0)}`}\n                </p>\n              </div>\n              <div>\n                <p>{`количество: ${product.quantity}`}</p>\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"button is-rounded is-warning\"\n                onClick={() => chooseProduct(product.id)}\n              >\n                Изменить\n              </button>\n            </div>\n          </React.Fragment>\n        ))}\n      </div>\n\n      {selectedProduct !== null && (\n        <Modal\n          selectedProduct={selectedProduct}\n          chooseProduct={chooseProduct}\n          addToping={addToping}\n          removeTopping={removeTopping}\n          changeOrder={changeOrder}\n          ingredients={ingredients}\n        />\n      )}\n      <div>\n        {/* {`Общий счет ${averagePrice} грн`} */}\n      </div>\n\n      <button className=\"button is-success\" type=\"button\">Подтвердить</button>\n    </>\n  );\n};\n\nexport default OrderList;\n","const BASE_URL = 'https://heroku-api-json.herokuapp.com';\n\nconst request = (url) => fetch(`${BASE_URL}/${url}/`)\n  .then((response) => response.json());\n\nexport const loadBurgers = (url) => request(url);\n\nexport const loadIngredients = (url) => request(url);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport Navigation from './Navigation/Navigation';\nimport BurgersList from './BurgersList/BurgersList';\nimport OrderList from './OrderList/OrderList';\nimport { loadBurgers, loadIngredients } from './requests';\n\nconst App = () => {\n  const [burgers, setBurgers] = useState([]);\n  const [userOrder, setUserOrder] = useState([]);\n  const [allIngredients, setIngredients] = useState([]);\n\n  const loadData = async () => {\n    const data = await loadBurgers('products');\n    const ingredientsFromServer = await loadIngredients('ingredients');\n\n    setIngredients(ingredientsFromServer);\n    setBurgers(data);\n  };\n\n  const changeOrder = (product) => {\n    const changedProduct = userOrder.map((dish) => {\n      if (product.id !== dish.id) {\n        return dish;\n      }\n\n      console.log(product);\n\n      return ({\n        ...product,\n        ...product.toppings,\n      });\n    });\n\n    console.log(changedProduct);\n\n    setUserOrder(changedProduct);\n  };\n\n  console.log(burgers);\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const addItem = useCallback((item) => {\n    setUserOrder((prevState) => {\n      if (allIngredients.length === 0) {\n        console.log(true, 'ingredients not exist');\n      }\n\n      if (prevState.length === 0) {\n        return [...prevState, {\n          ...item,\n          quantity: 1,\n          toppings: item.ingredients.map((ingId) => allIngredients\n            .find((product) => product.id === ingId))\n            .map((product) => ({ ...product, quantity: 1 })),\n        }];\n      }\n\n      const isProductExist = prevState.some((product) => product.id === item.id);\n\n      if (!isProductExist) {\n        return [...prevState, {\n          ...item,\n          quantity: 1,\n          toppings: item.ingredients.map((ingId) => allIngredients\n            .find((product) => product.id === ingId))\n            .map((product) => ({ ...product, quantity: 1 })),\n        }];\n      }\n\n      return prevState.map((dish) => {\n        if (dish.id !== item.id) {\n          return dish;\n        }\n\n        const newItem = {\n          ...item,\n          quantity: dish.quantity + 1,\n          toppings: item.ingredients.map((ingId) => allIngredients\n            .find((product) => product.id === ingId))\n            .map((product) => ({ ...product, quantity: 1 })),\n        };\n\n        return newItem;\n      });\n    });\n  }, [allIngredients]);\n\n  return (\n    <div className=\"container\">\n      <Navigation />\n      <Switch>\n        <Route path=\"/\" exact>\n          <BurgersList\n            burgers={burgers}\n            onProductAdd={addItem}\n          />\n        </Route>\n        <Route path=\"/addings\">\n          {userOrder.length !== 0 && (\n          <OrderList\n            userOrder={userOrder}\n            ingredients={allIngredients}\n            changeOrder={changeOrder}\n          />\n          )}\n        </Route>\n        <Route path=\"/bucket\">\n          <div>hello</div>\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}